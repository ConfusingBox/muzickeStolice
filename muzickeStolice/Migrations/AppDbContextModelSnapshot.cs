// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using muzickeStolice.Data;

#nullable disable

namespace muzickeStolice.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("muzickeStolice.Model.Bend", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateOnly>("DatumOsnivanja")
                        .HasColumnType("date");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Bendovi");
                });

            modelBuilder.Entity("muzickeStolice.Model.MuzickoDelo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tip")
                        .HasColumnType("integer");

                    b.Property<string>("ZanrDelaNaziv")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("ZanrDelaNaziv");

                    b.ToTable("MuzickaDela");
                });

            modelBuilder.Entity("muzickeStolice.Model.Osoba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Biografija")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Osobe");
                });

            modelBuilder.Entity("muzickeStolice.Model.Zanr", b =>
                {
                    b.Property<string>("Naziv")
                        .HasColumnType("text");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Naziv");

                    b.ToTable("Zanrovi");
                });

            modelBuilder.Entity("muzickeStolice.Model.MuzickoDelo", b =>
                {
                    b.HasOne("muzickeStolice.Model.Zanr", "ZanrDela")
                        .WithMany()
                        .HasForeignKey("ZanrDelaNaziv");

                    b.Navigation("ZanrDela");
                });
#pragma warning restore 612, 618
        }
    }
}
